#include<iostream>
#include<string>
#include<vector>
#include<map>
using std::string;
using std::vector;
using std::map;

vector<string> findRepeatDnaSequences(string s){
    int n = s.length();
    vector<string> answer;
    if (n<=10) return answer;
    map<string,int> store;
    for (int i=0;i<=n-10;i++){
        string temp = s;
        temp.erase(temp.begin(),temp.begin()+i);
        temp.erase(temp.begin()+10,temp.end());
        if (store.find(temp)!=store.end()) store[temp]++;
        else store[temp] = 1;
    }
    for (auto it = store.begin();it!=store.end();it++){
        if (it->second>1) answer.push_back(it->first);
    }
    return answer;
}


int main(){
    string s = "CCTATTTAAGGGAATCGCGGTCAACTATGTTGCCAGAATATAGGATGGAAAGCAGACTCGCCGGCAGACGCTCTGAGATTCTCTGTAATCGATCTGAGTTCATAAGCGACTCATAGACACCGTAGGCCATGACGGGGGAGGTGCGGGTAGTCGCAAAAAAAATGTGGCCTGCGTTCCGAAAGTTAATCGTAAGGACCTCTTAAGGTCAATTTCCGTAGTGATATAACGGACGCGACTTTAGGATACTATATTGCCCCACATTAACTCCCTTCCCTCTGCAATCGGCATGTGCTCCCGAGGTATACTGTCTTCGGAACAAACTGAATCCATACACCTCTTATCGACCCAGCACCTCCGAAAAGGAAATCGACGCCCCAACATTATACGCCTAGACAATTGCAACATAGAGCGAGACGTAGCGATCCAAACGAGCTAACAGCTCGAGATAACGAGTGCCTACGGCGATCGATGTCAAACGTCCAAGTGCATACTCGCTAGGACATTGGCTCATCAGGACTCAACTTAGTAGCTGATGCTGCTAGTTTAACGTCTTGTAATCAATATAGAGCATTGCACGGACACCAGCGCTCAACCTGGAGATGCCTTGTCTCGGAAAAACTGCATTCTGTAATAACCACGGGGTGCCACATTCCGGAACCGGGATCCGTCAAGCATGCCTTTCCGATTCATCGCGGGGTACCTCTGGCTTCCTTGAACCTGGGTGGGTATAAAATAACCGGTTTTAAGTGGCTCGACAGAGCGGGAAGCAGGCGCTATCATCAGGTTTTTACGGATTTATAGAGACCTCTTGTGCAGCAATACCTCTTTAATCCAATGTGGGCGCCCCCTTCATAGGGTCACGTCAGCATGATTCGTCGGGCCGAGGGACATGACTGACGACCGTTGGCAATACCCCGACCTCTAAAATTGTCCAACAGTGTGGTAGGTTATCCTGGTGACGCGGTATGACGGTCGATGCGAGCGTGTAGAAAGATGACGAGAGAGTCATCTCACAACATTGCGTGCTGTTTGGATCATACACCCCTGTGGAGGGCTTACCAGAAAGTGGACGCAGAAAGCCACCAAAAGTGTCATGCCAGATACCTGGCCTCCTTCGCCGCCGCGACTGAAGACCTTCCTTTAATTCCGTTATCCTACTTACGACCGAGAGTCAGATCTGTCAGTAAAGATCGGTCTGTTGCTTTCCACGGACTGTGAAGAATCCGCTGTTCTAACCAGCCAGCCCATTATACGGATCGATTTTGAAGTAACCTAGTAGGCGAATCAGCGGCCGGGCCTGATGCTAGACTCCCTAGACAATTTCCTCTCCACGGAAGGTTCCTAATCCCTGGGAATTTGGCTTATACGGGCCTTGGACACTGTTAAACTTCAGAGTGATAATTTAATGGCGAAGCTCTACGCCAGCGACCGCCGAAGCTCGCACCTTTAGCCCCCCTGAGTGAAGAACACTCGGGAATCTGCTCTCCTTGCAACCAAGCAACGGCGGGGTAGATATGGTGGGTTTCATGACGGCCCGGGAAGCTCTGGTCATAGCAATACTTGGGTAGCTGTGATGAGGGTCCAAAACTTTTTGGGCCAAGGTTCGGACGACACCGTCCGATCGACTGCCTAACTACCTGTTCACCCCATCGATAGAGTACAGTCGAGGCCCCGCCCGACCCATACGTCAAGACAGTGACAATAGGTGCTTACGAGTTTCTATAATAAATTGTCGGGACGATGTCTGCCCGCCTACCTGAGTGCGTGCCCGATATGGGGCTTGCGGAAAACTATGAAATATTAGTATTGCCCGGGGGACTCAGTCGAGTATTTGTGGAGACTCCCATTGCACTACTACAGCACCATATTAAGCTTACTCAGATACGTTAGAACAATAGGGGATCCACTTAAAACATTACAGATCCCAATCGGTCTCCTTGTTAAGGAAAAGCGTTAACAGGTGTGGTGGCAGTTATATTTGTAATAGACTTATAATAGGGTATTCCAAGTTTATTGTGGATAACGTCTCAAACCTGTTCCACACCACGAGTGTGGGCAATGAGATCCTATTGGCACGTCGTTATAGTCTCAGTGCCTGAAGACACCTGAAAGCAGGCGCTGTGACGTGTACCCAGTGCCCTCTGCAACCGGGAACTAGGGTTACAGAGGGGAAACAAAAATGATCGCACGCTTTAATCCAATACCGTTTCCCGTCTCCCAAGGTGAGACACTCCGGGGTATAAGTCCAGCCTCTTGTACGGTCACGATTAGGCGAAAATCTACTGTCTACCTTCGGTGTGCATTGTCTTAGCGTCTTATCCAGAGAGGAATGGCTTTCGTCGTCGTCGCTAGTTTCGCTCGCTTGAGGTATAGTTAATAGCAAGACTACGAGTCCACTGCTTCATGTCTAATTCATCGGCAGCCCTGTTTGGATTGGAGCGTAGCTAGGACCCCCGAACCAGCCTTAACTATGAACGTTTGTCTTCAAATCTGGGCGCACGTACTTCGTAGGCTGGATATGCAGAATCTCGCCGTCGTGACGACGATCCGTTGTAGACGGCACAGCGTCTCTGACCGGCTTGAACTAATGCTGACAATTCTGACATAAGGTCTACGCATCCAGAAAGTGTAATGCATGTATGTATGCAGCCAAACGATAGTAGAGCCCTATCTCGCTTGAGAGGCACTTCCCTGTATGCAAATACCGATGTTTCTCCGCTTCATGTACTAAAACCCTGTGACCGACTAGTTGCACCTACGATTGTATGACACGACGGCCTTAGAGGCAGCAACGCGTGGTAGGCCGTTATGCGAGGAATTCTACTACAGTCGGGAGCCGCAGCGGAAGCAATTTTTTTACTCACGTTCCAGCATGCTGCAAACGGAAGCTGACACGGAGTCAATCGGGTAAATTTTGAGCAAATAAATCGCGACAACTAGTCCCGACTACGCTTTCGACACTGTCCGGCAGATTCCGTGCATCAATTAAACGTCATCAATCAATTACTGGCACGACTGTAGACGGGTGTACTCTTTTATAGACTCAGCAGTAGGACCTATGTGGAGCGGTCTACACATTGACGCAAGACACAAGAACTAGCGCGGATTGTTTGATTCGGTGACCTCTGAGGGTCGCTAAGCGACACCACAATGCGTTAGTGCTAACGTAAGAGAGCTCGATTGCTATATAGATGTCGGTATTCTTCAATGCATTTGCTTACTAGCAGCGTCGGATACTCTTGGCCGGGACCTTCTTATTAGTCAATTACAGAAACAGTTGAAAGCCCCACCAGTTGCATATACTACTGCCTCCATTGTTGATGACCTCAACTTGCCTACCAGGATTGGAGCACCGATGTTATTTCCTCCGAGGTATAACCGAGCGTCATAACTTGGATGTATCCAGACTCGCTTATCCCCTCGCTGAGCATATCCTAGTCTGGATGACTTCAGAGAGCCTTTCTGGTCCGTAATATCCCAGTAGACTGGAGTTGTAGCAAATCGACCCTTGGGTGACTGCCTCACCCTGAAGTGATGTCTCTTCTTTACCATGCAGGCACTGGTCTAGCCGCCGAGTATCTTCTGATCCTTCTAAGGGCTTATTCGAAACAGCTTAACAAATGACAGGCTGTGATGATATATTACGTTGACGCTACGGGGACAGCGCCTATGTCGGCCACTAGGGCTTCATCCGTTACTCAGGGTCAAATGGGGATTTCATATTGCGGGATCGATTGAAGATAGCATCACACGTCTCCCAAGATACGTCCCACTTTGGTTTTGGTCACTCCTTATTCCGCGACGGTAGTCCCGCGCTGTTGCAAACTCGTTTGAAGACGCCTAGTCAAGATTCACTTCGCGGATCCGGCATCTTCGAATGGTTGGGATCCAGACGAGCGTGGGCGTACTGCTTACGAGAACGACTCGGCAGTGTTAGAGTGTTATCTGAAGGAGATGCTAGTAACATAATATACAAATCTTTATGTTAGTAGACTGCACAAGTCAATATGGATACATAGGTCCATGGAAGAATGTTCACGCGTTACTTGTGTCTCGCCACGCGAGTGCATCTCCATAGAGCCTTCCTGTATCGTCACTTTCTCTCGATGGTCAGCGTTTCAATAATTCGCGAGCAACAACGTCGATCTCCGGGATATACGATCAGCCCAGAGTACAAGACCCGATATGCACGGCATGCAATATCCAGAGTCGGGCATACTTTATTGGACTGGTAAGTCTCTCCTGTCCACGCTGACTACAACTGAAGTAGTGTGACCTGACTGGCGCCTTCTACCACCCATGTCTCCAGCAATTGTCGCATCATACAGGTTCCCAGCGTAGCGTCGCCCCTTTGGCGCTTTCCTGCGGTATCGATATAATGAAATTTTCACCAACGTTGCGCTTATTCGCAAGGTGGCGAGATTGTATTATGCCACACAGCCTCCTAGAATATCCTAAGGCAGAGTTCGGTGACTTTTGCCGCTTTAGGCAGGACAGAGCTGTCCTTATCTTGGGACAGCACGTGCTTCGATATACTGCCCGCGCTTTCTCTGGGGACGCTTTAAGGTCTTTTTGCTGCGATTGCGCTATCCGAGCCACTGTATCTTATACCGACGTATCTCGGCCTCGTTACATAGAAAATACTGTCAGCGCTTGTAGCGAGACCACGCGATAGTGACCGGAGTTGGTTCCTCCGTCCTTTTTGTATTCCCCGTTGCGACTGATTCACGTGACCACATAGTCATAAGACACTGAAACAAAGCTTACTTTGGCGAGTAGGATGTGTTAATAACTTCTGGCAGCACATAGAATTGGTCCGTGGTCCTCCTTTGCGGCCACTACTGAACGTACCAATGAGTACGTATTGACCTCTTACTGAGTGTAGTAAGGGAGCATCAATCGGTCTCCGGGTTTTTGATTCATGAGTCATGCATCAGTGGTTCATCCCTTGCGTGTTATTCTCTTGATACGGTTGACTAAGCAATGAGTTAGTCGAGCTA";
    vector<string> answer = findRepeatDnaSequences(s);
    for (auto val : answer) std::cout<<val<<" ";
    std::cout<<std::endl;
    return 0;
}